/*
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details. A copy of the GNU Lesser General Public License
 * is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 */
package org.codice.imaging.nitf.extract;

import java.util.Arrays;
import java.util.List;

class ExtractCMETAA extends BaseExtract {

  private static final List<String> ATTRIBUTES =
      Arrays.asList(
          "CG_GPSAC_CONFIDENCE",
          "ADDITIONAL_TRES",
          "AF_TYPE1",
          "AF_TYPE2",
          "AF_TYPE3",
          "CA_CALPA",
          "CG_AMPT_X",
          "CG_AMPT_Y",
          "CG_AMPT_Z",
          "CG_APCEN_X",
          "CG_APCEN_Y",
          "CG_APCEN_Z",
          "CG_APER_CONF_XY",
          "CG_APER_CONF_Z",
          "CG_AP_CONF_XY",
          "CG_AP_CONF_Z",
          "CG_CAAC",
          "CG_CONE_CONFIDENCE",
          "CG_CROSS",
          "CG_CROSS_CONFIDENCE",
          "CG_EAST",
          "CG_FPNUV_X",
          "CG_FPNUV_Y",
          "CG_FPNUV_Z",
          "CG_GAAC",
          "CG_GAAC_CONFIDENCE",
          "CG_GPSAC",
          "CG_GTP_X",
          "CG_GTP_Y",
          "CG_GTP_Z",
          "CG_IDPNUVX",
          "CG_IDPNUVY",
          "CG_IDPNUVZ",
          "CG_INCIDENT",
          "CG_LAYOVER",
          "CG_LD",
          "CG_LOS_CONFIDENCE",
          "CG_MAP_TYPE",
          "CG_MGRCORLL",
          "CG_MGRSCORLR",
          "CG_MGRSCORUL",
          "CG_MGRSCORUR",
          "CG_MGRS_CENT",
          "CG_MGRS_CONFIDENCE",
          "CG_MODEL",
          "CG_NORTH",
          "CG_NORTH_CONFIDENCE",
          "CG_OPM",
          "CG_PATCH_LATCEN",
          "CG_PATCH_LAT_CONFIDENCE",
          "CG_PATCH_LGCORLR",
          "CG_PATCH_LGCORUL",
          "CG_PATCH_LGCORUR",
          "CG_PATCH_LNGCEN",
          "CG_PATCH_LNGCOLL",
          "CG_PATCH_LONG_CONFIDENCE",
          "CG_PATCH_LTCORLL",
          "CG_PATCH_LTCORLR",
          "CG_PATCH_LTCORUL",
          "CG_PATCH_LTCORUR",
          "CG_RLOS",
          "CG_SCECN_X",
          "CG_SCECN_Y",
          "CG_SCECN_Z",
          "CG_SC_CONF_XY",
          "CG_SC_CONF_Z",
          "CG_SHADOW",
          "CG_SLANT_CONFIDENCE",
          "CG_SLOPE",
          "CG_SNACC_X",
          "CG_SNACC_Y",
          "CG_SNACC_Z",
          "CG_SNATT_PITCH",
          "CG_SNATT_ROLL",
          "CG_SNATT_YAW",
          "CG_SNVEL_X",
          "CG_SNVEL_Y",
          "CG_SNVEL_Z",
          "CG_SPARE_A",
          "CG_SQUINT",
          "CG_SRAC",
          "CG_SWWD",
          "CG_TILT",
          "CMPLX_AVG_POWER",
          "CMPLX_AZ_SLL",
          "CMPLX_AZ_TAY_NBAR",
          "CMPLX_DOMAIN",
          "CMPLX_IC_1",
          "CMPLX_IC_2",
          "CMPLX_IC_BPP",
          "CMPLX_LINLOG_TP",
          "CMPLX_LIN_SCALE",
          "CMPLX_MAG_REMAP_TYPE",
          "CMPLX_PHASE_QUANT_BIT_DEPTH",
          "CMPLX_PHASE_QUANT_FLAG",
          "CMPLX_RNG_SLL",
          "CMPLX_RNG_TAY_NBAR",
          "CMPLX_SIGNAL_PLANE",
          "CMPLX_SIZE_1",
          "CMPLX_SIZE_2",
          "CMPLX_WEIGHT",
          "CMPLX_WEIGHT_NORM",
          "IF_AFFTS",
          "IF_AZFFT_SAMP",
          "IF_AZFFT_TOT",
          "IF_AZRES",
          "IF_AZSR",
          "IF_AZSS",
          "IF_BEAM_COMP",
          "IF_DC_IS_COL",
          "IF_DC_IS_ROW",
          "IF_DC_SF_COL",
          "IF_DC_SF_ROW",
          "IF_GEODIST",
          "IF_IMG_COL_DC",
          "IF_IMG_ROW_DC",
          "IF_INCPH",
          "IF_KEYSTN",
          "IF_LINSFT",
          "IF_PATCH_1_COL",
          "IF_PATCH_1_ROW",
          "IF_PATCH_2_COL",
          "IF_PATCH_2_ROW",
          "IF_PATCH_3_COL",
          "IF_PATCH_3_ROW",
          "IF_PATCH_4_COL",
          "IF_PATCH_4_ROW",
          "IF_PROCESS",
          "IF_RANGE_DATA",
          "IF_RD",
          "IF_RFFTS",
          "IF_RFFT_SAMP",
          "IF_RFFT_TOT",
          "IF_RGFO",
          "IF_RGRES",
          "IF_RGWLK",
          "IF_RSR",
          "IF_RSS",
          "IF_SR_AMOUNT",
          "IF_SR_AMOUNT1",
          "IF_SR_AMOUNT2",
          "IF_SR_NAME1",
          "IF_SR_NAME2",
          "IF_SR_NAME3",
          "IF_SUBPATCH",
          "IF_SUBP_COL",
          "IF_SUBP_ROW",
          "IF_SUB_AZ",
          "IF_SUB_RG",
          "IF_TILE_1_COL",
          "IF_TILE_1_ROW",
          "IF_TILE_2_COL",
          "IF_TILE_2_ROW",
          "IF_TILE_3_COL",
          "IF_TILE_3_ROW",
          "IF_TILE_4_COL",
          "IF_TILE_4_ROW",
          "POL",
          "POL_AFCOMP",
          "POL_BAL",
          "POL_BAL_MAG",
          "POL_BAL_PHS",
          "POL_HCOMP",
          "POL_HCOMP_BASIS",
          "POL_HCOMP_COEF_1",
          "POL_HCOMP_COEF_2",
          "POL_HCOMP_COEF_3",
          "POL_ISO_1",
          "POL_RE",
          "POL_REFERENCE",
          "POL_REG",
          "POL_SPARE_A",
          "POL_SPARE_N",
          "POL_TR",
          "RD_CEN_FREQ",
          "RD_MODE",
          "RD_PATCH_NO",
          "RD_PRC_NO",
          "RELATED_TRES",
          "T_HHMMSSLOCAL",
          "T_HHMMSSUTC",
          "T_UTC_YYYYMMMDD",
          "VPH_COND",
          "WF_BW",
          "WF_CDP",
          "WF_CENFRQ",
          "WF_CHRPRT",
          "WF_ENDFR",
          "WF_NUMBER_OF_PULSES",
          "WF_PRF",
          "WF_PRI",
          "WF_SRTFR",
          "WF_WIDTH");

  ExtractCMETAA() {
    super("CMETAA", ATTRIBUTES);
  }
}
